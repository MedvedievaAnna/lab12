#include <iostream>
#include <cstdlib>
#include <ctime>


using namespace std;

void transponse(int matr[5][5] , int B[5][5]) 
{

    int temp = 0;   
    //first loop
    for(int i = 0; i < 5; ++i)
    {
        //second loop
        for(int j = i; j < 5; ++j)
        {
            //transponse elements - swap elements
            temp = matr[i][j];
            B[i][j] = matr[j][i];
            B[j][i] = temp;
        }
    }
}

int multipleMinRowElement(int matr[5][5])
{
    int result = 1;
    int i,j;
    for (i = 0; i < 5; i++)
    {
         int min = matr[i][0];
        for (j = 0; j < 5; j++)
        {
             if (matr[i][j] < min)
             {
                 min = matr[i][j];
             }
         }
         result = result * min;

    }
    return result;
}

int main()
{
    
    int matrLength = 5;
    //love c++
    int A[matrLength][5];
    int B[matrLength][5];
    
    
    for (int i=0; i<matrLength; i++)
    {
        for (int j=0; j<matrLength; j++){
          A[i][j]=rand()%9 + 1;   
        }       
    }
    
    
    
    cout << "Matrix A" << endl;
    for (int i = 0; i < matrLength; i++) {
        for (int j = 0; j < matrLength; j++) {
            cout << " " << A[i][j] << " ";
        }
        cout << endl;
    }
    
    cout << "B transponse" << endl;
    transponse(A , B);
    
    for (int i = 0; i < matrLength; i++) {
        for (int j = 0; j < matrLength; j++) {
            cout << " " << B[i][j] << " ";
        }
        cout << endl;
    }
    
    
    cout << "Multiplication of minimal elements" << endl;
    cout << multipleMinRowElement(A) << endl;

    return 0;
}
